// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: pkg/backoffice/main.proto

package backoffice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type HasAccessIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Game   string `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *HasAccessIn) Reset() {
	*x = HasAccessIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasAccessIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasAccessIn) ProtoMessage() {}

func (x *HasAccessIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasAccessIn.ProtoReflect.Descriptor instead.
func (*HasAccessIn) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{1}
}

func (x *HasAccessIn) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *HasAccessIn) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

type GameListIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *GameListIn) Reset() {
	*x = GameListIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameListIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameListIn) ProtoMessage() {}

func (x *GameListIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameListIn.ProtoReflect.Descriptor instead.
func (*GameListIn) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{2}
}

func (x *GameListIn) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type GameDataByIntegratorName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Game string `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *GameDataByIntegratorName) Reset() {
	*x = GameDataByIntegratorName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameDataByIntegratorName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDataByIntegratorName) ProtoMessage() {}

func (x *GameDataByIntegratorName) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDataByIntegratorName.ProtoReflect.Descriptor instead.
func (*GameDataByIntegratorName) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{3}
}

func (x *GameDataByIntegratorName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GameDataByIntegratorName) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

type GetProviderIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameName string `protobuf:"bytes,1,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
}

func (x *GetProviderIn) Reset() {
	*x = GetProviderIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderIn) ProtoMessage() {}

func (x *GetProviderIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderIn.ProtoReflect.Descriptor instead.
func (*GetProviderIn) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{4}
}

func (x *GetProviderIn) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

type GetProviderOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *GetProviderOut) Reset() {
	*x = GetProviderOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProviderOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProviderOut) ProtoMessage() {}

func (x *GetProviderOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProviderOut.ProtoReflect.Descriptor instead.
func (*GetProviderOut) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{5}
}

func (x *GetProviderOut) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type HasAccessOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasAccess  bool   `protobuf:"varint,1,opt,name=has_access,json=hasAccess,proto3" json:"has_access,omitempty"`
	Integrator string `protobuf:"bytes,2,opt,name=integrator,proto3" json:"integrator,omitempty"`
}

func (x *HasAccessOut) Reset() {
	*x = HasAccessOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasAccessOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasAccessOut) ProtoMessage() {}

func (x *HasAccessOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasAccessOut.ProtoReflect.Descriptor instead.
func (*HasAccessOut) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{6}
}

func (x *HasAccessOut) GetHasAccess() bool {
	if x != nil {
		return x.HasAccess
	}
	return false
}

func (x *HasAccessOut) GetIntegrator() string {
	if x != nil {
		return x.Integrator
	}
	return ""
}

type GameListOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []string `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *GameListOut) Reset() {
	*x = GameListOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameListOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameListOut) ProtoMessage() {}

func (x *GameListOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameListOut.ProtoReflect.Descriptor instead.
func (*GameListOut) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{7}
}

func (x *GameListOut) GetGames() []string {
	if x != nil {
		return x.Games
	}
	return nil
}

type GameListOutFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *GameListOutFull) Reset() {
	*x = GameListOutFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameListOutFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameListOutFull) ProtoMessage() {}

func (x *GameListOutFull) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameListOutFull.ProtoReflect.Descriptor instead.
func (*GameListOutFull) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{8}
}

func (x *GameListOutFull) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ApiUrl              string       `protobuf:"bytes,3,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	ClientUrl           string       `protobuf:"bytes,4,opt,name=client_url,json=clientUrl,proto3" json:"client_url,omitempty"`
	IsPublic            bool         `protobuf:"varint,5,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsStatisticShown    bool         `protobuf:"varint,6,opt,name=is_statistic_shown,json=isStatisticShown,proto3" json:"is_statistic_shown,omitempty"`
	Currencies          []string     `protobuf:"bytes,7,rep,name=currencies,proto3" json:"currencies,omitempty"`
	Languages           []string     `protobuf:"bytes,8,rep,name=languages,proto3" json:"languages,omitempty"`
	IsDemo              bool         `protobuf:"varint,9,opt,name=is_demo,json=isDemo,proto3" json:"is_demo,omitempty"`
	IsFreespins         bool         `protobuf:"varint,10,opt,name=is_freespins,json=isFreespins,proto3" json:"is_freespins,omitempty"`
	Rtp                 *int64       `protobuf:"varint,11,opt,name=rtp,proto3,oneof" json:"rtp,omitempty"`
	Volatility          *string      `protobuf:"bytes,12,opt,name=volatility,proto3,oneof" json:"volatility,omitempty"`
	AvailableRtp        []int64      `protobuf:"varint,13,rep,packed,name=available_rtp,json=availableRtp,proto3" json:"available_rtp,omitempty"`
	AvailableVolatility []string     `protobuf:"bytes,14,rep,name=available_volatility,json=availableVolatility,proto3" json:"available_volatility,omitempty"`
	UserLocales         []string     `protobuf:"bytes,15,rep,name=user_locales,json=userLocales,proto3" json:"user_locales,omitempty"`
	OnlineVolatility    bool         `protobuf:"varint,16,opt,name=online_volatility,json=onlineVolatility,proto3" json:"online_volatility,omitempty"`
	AvailableWagerSets  []*WagerSets `protobuf:"bytes,17,rep,name=available_wager_sets,json=availableWagerSets,proto3" json:"available_wager_sets,omitempty"`
	GambleDoubleUp      int64        `protobuf:"varint,18,opt,name=gamble_double_up,json=gambleDoubleUp,proto3" json:"gamble_double_up,omitempty"`
	WagerSet            *WagerSets   `protobuf:"bytes,19,opt,name=wager_set,json=wagerSet,proto3" json:"wager_set,omitempty"`
	Provider            string       `protobuf:"bytes,20,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{9}
}

func (x *Game) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Game) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Game) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *Game) GetClientUrl() string {
	if x != nil {
		return x.ClientUrl
	}
	return ""
}

func (x *Game) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *Game) GetIsStatisticShown() bool {
	if x != nil {
		return x.IsStatisticShown
	}
	return false
}

func (x *Game) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *Game) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *Game) GetIsDemo() bool {
	if x != nil {
		return x.IsDemo
	}
	return false
}

func (x *Game) GetIsFreespins() bool {
	if x != nil {
		return x.IsFreespins
	}
	return false
}

func (x *Game) GetRtp() int64 {
	if x != nil && x.Rtp != nil {
		return *x.Rtp
	}
	return 0
}

func (x *Game) GetVolatility() string {
	if x != nil && x.Volatility != nil {
		return *x.Volatility
	}
	return ""
}

func (x *Game) GetAvailableRtp() []int64 {
	if x != nil {
		return x.AvailableRtp
	}
	return nil
}

func (x *Game) GetAvailableVolatility() []string {
	if x != nil {
		return x.AvailableVolatility
	}
	return nil
}

func (x *Game) GetUserLocales() []string {
	if x != nil {
		return x.UserLocales
	}
	return nil
}

func (x *Game) GetOnlineVolatility() bool {
	if x != nil {
		return x.OnlineVolatility
	}
	return false
}

func (x *Game) GetAvailableWagerSets() []*WagerSets {
	if x != nil {
		return x.AvailableWagerSets
	}
	return nil
}

func (x *Game) GetGambleDoubleUp() int64 {
	if x != nil {
		return x.GambleDoubleUp
	}
	return 0
}

func (x *Game) GetWagerSet() *WagerSets {
	if x != nil {
		return x.WagerSet
	}
	return nil
}

func (x *Game) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type IntegratorGameSettingsOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wagers     []int64 `protobuf:"varint,1,rep,packed,name=wagers,proto3" json:"wagers,omitempty"`
	Rtp        *int64  `protobuf:"varint,2,opt,name=rtp,proto3,oneof" json:"rtp,omitempty"`
	Volatility *string `protobuf:"bytes,3,opt,name=volatility,proto3,oneof" json:"volatility,omitempty"`
	ShortLink  bool    `protobuf:"varint,4,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`
}

func (x *IntegratorGameSettingsOut) Reset() {
	*x = IntegratorGameSettingsOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegratorGameSettingsOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegratorGameSettingsOut) ProtoMessage() {}

func (x *IntegratorGameSettingsOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegratorGameSettingsOut.ProtoReflect.Descriptor instead.
func (*IntegratorGameSettingsOut) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{10}
}

func (x *IntegratorGameSettingsOut) GetWagers() []int64 {
	if x != nil {
		return x.Wagers
	}
	return nil
}

func (x *IntegratorGameSettingsOut) GetRtp() int64 {
	if x != nil && x.Rtp != nil {
		return *x.Rtp
	}
	return 0
}

func (x *IntegratorGameSettingsOut) GetVolatility() string {
	if x != nil && x.Volatility != nil {
		return *x.Volatility
	}
	return ""
}

func (x *IntegratorGameSettingsOut) GetShortLink() bool {
	if x != nil {
		return x.ShortLink
	}
	return false
}

type WagerSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WagerLevels  []int64 `protobuf:"varint,2,rep,packed,name=wager_levels,json=wagerLevels,proto3" json:"wager_levels,omitempty"`
	DefaultWager int64   `protobuf:"varint,3,opt,name=default_wager,json=defaultWager,proto3" json:"default_wager,omitempty"`
}

func (x *WagerSets) Reset() {
	*x = WagerSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WagerSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WagerSets) ProtoMessage() {}

func (x *WagerSets) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WagerSets.ProtoReflect.Descriptor instead.
func (*WagerSets) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{11}
}

func (x *WagerSets) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WagerSets) GetWagerLevels() []int64 {
	if x != nil {
		return x.WagerLevels
	}
	return nil
}

func (x *WagerSets) GetDefaultWager() int64 {
	if x != nil {
		return x.DefaultWager
	}
	return 0
}

type CurrenciesOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currencies []*Currency `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *CurrenciesOut) Reset() {
	*x = CurrenciesOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrenciesOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrenciesOut) ProtoMessage() {}

func (x *CurrenciesOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrenciesOut.ProtoReflect.Descriptor instead.
func (*CurrenciesOut) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{12}
}

func (x *CurrenciesOut) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type Currency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency     string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	BaseCurrency string `protobuf:"bytes,2,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
}

func (x *Currency) Reset() {
	*x = Currency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{13}
}

func (x *Currency) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Currency) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

type CurrenciesIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrenciesFilter []*CurrenciesFilter `protobuf:"bytes,1,rep,name=CurrenciesFilter,proto3" json:"CurrenciesFilter,omitempty"`
}

func (x *CurrenciesIn) Reset() {
	*x = CurrenciesIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrenciesIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrenciesIn) ProtoMessage() {}

func (x *CurrenciesIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrenciesIn.ProtoReflect.Descriptor instead.
func (*CurrenciesIn) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{14}
}

func (x *CurrenciesIn) GetCurrenciesFilter() []*CurrenciesFilter {
	if x != nil {
		return x.CurrenciesFilter
	}
	return nil
}

type CurrenciesFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CurrenciesFilter) Reset() {
	*x = CurrenciesFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrenciesFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrenciesFilter) ProtoMessage() {}

func (x *CurrenciesFilter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrenciesFilter.ProtoReflect.Descriptor instead.
func (*CurrenciesFilter) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{15}
}

func (x *CurrenciesFilter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CurrenciesFilter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetMultiplierIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	ApiKey   string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *GetMultiplierIn) Reset() {
	*x = GetMultiplierIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiplierIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiplierIn) ProtoMessage() {}

func (x *GetMultiplierIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiplierIn.ProtoReflect.Descriptor instead.
func (*GetMultiplierIn) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{16}
}

func (x *GetMultiplierIn) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetMultiplierIn) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type ProviderMultiplierEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider   string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Multiplier int64  `protobuf:"varint,2,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
}

func (x *ProviderMultiplierEntry) Reset() {
	*x = ProviderMultiplierEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProviderMultiplierEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderMultiplierEntry) ProtoMessage() {}

func (x *ProviderMultiplierEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderMultiplierEntry.ProtoReflect.Descriptor instead.
func (*ProviderMultiplierEntry) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{17}
}

func (x *ProviderMultiplierEntry) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ProviderMultiplierEntry) GetMultiplier() int64 {
	if x != nil {
		return x.Multiplier
	}
	return 0
}

type GetMultiplierOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderMultipliers []*ProviderMultiplierEntry `protobuf:"bytes,1,rep,name=provider_multipliers,json=providerMultipliers,proto3" json:"provider_multipliers,omitempty"`
}

func (x *GetMultiplierOut) Reset() {
	*x = GetMultiplierOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiplierOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiplierOut) ProtoMessage() {}

func (x *GetMultiplierOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiplierOut.ProtoReflect.Descriptor instead.
func (*GetMultiplierOut) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{18}
}

func (x *GetMultiplierOut) GetProviderMultipliers() []*ProviderMultiplierEntry {
	if x != nil {
		return x.ProviderMultipliers
	}
	return nil
}

type IntegratorApiKeyIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrator string `protobuf:"bytes,1,opt,name=integrator,proto3" json:"integrator,omitempty"`
}

func (x *IntegratorApiKeyIn) Reset() {
	*x = IntegratorApiKeyIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegratorApiKeyIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegratorApiKeyIn) ProtoMessage() {}

func (x *IntegratorApiKeyIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegratorApiKeyIn.ProtoReflect.Descriptor instead.
func (*IntegratorApiKeyIn) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{19}
}

func (x *IntegratorApiKeyIn) GetIntegrator() string {
	if x != nil {
		return x.Integrator
	}
	return ""
}

type IntegratorApiKeyOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *IntegratorApiKeyOut) Reset() {
	*x = IntegratorApiKeyOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegratorApiKeyOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegratorApiKeyOut) ProtoMessage() {}

func (x *IntegratorApiKeyOut) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegratorApiKeyOut.ProtoReflect.Descriptor instead.
func (*IntegratorApiKeyOut) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{20}
}

func (x *IntegratorApiKeyOut) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type IntegratorGameSettingsIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKey   string `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Game     string `protobuf:"bytes,2,opt,name=game,proto3" json:"game,omitempty"`
	Currency string `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *IntegratorGameSettingsIn) Reset() {
	*x = IntegratorGameSettingsIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_backoffice_main_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegratorGameSettingsIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegratorGameSettingsIn) ProtoMessage() {}

func (x *IntegratorGameSettingsIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_backoffice_main_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegratorGameSettingsIn.ProtoReflect.Descriptor instead.
func (*IntegratorGameSettingsIn) Descriptor() ([]byte, []int) {
	return file_pkg_backoffice_main_proto_rawDescGZIP(), []int{21}
}

func (x *IntegratorGameSettingsIn) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *IntegratorGameSettingsIn) GetGame() string {
	if x != nil {
		return x.Game
	}
	return ""
}

func (x *IntegratorGameSettingsIn) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

var File_pkg_backoffice_main_proto protoreflect.FileDescriptor

var file_pkg_backoffice_main_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x22, 0x20, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a, 0x0b, 0x48, 0x61, 0x73,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x42, 0x0a, 0x18,
	0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65,
	0x22, 0x2c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2c,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4f, 0x75, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x0c,
	0x48, 0x61, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x61, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x68, 0x61, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x23, 0x0a, 0x0b, 0x47,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x22, 0x39, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x46,
	0x75, 0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xe5, 0x05, 0x0a, 0x04,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x2c, 0x0a,
	0x12, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x64, 0x65, 0x6d, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x65,
	0x6d, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x73, 0x70, 0x69,
	0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65,
	0x73, 0x70, 0x69, 0x6e, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x72, 0x74, 0x70, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x72, 0x74, 0x70, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a,
	0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72,
	0x74, 0x70, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x74, 0x70, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0e,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56,
	0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x56,
	0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x14, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x74, 0x73, 0x52, 0x12,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x67, 0x61,
	0x6d, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x12, 0x32, 0x0a, 0x09,
	0x77, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x61, 0x67,
	0x65, 0x72, 0x53, 0x65, 0x74, 0x73, 0x52, 0x08, 0x77, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x72, 0x74, 0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0xa5, 0x01, 0x0a, 0x19, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x4f, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x06, 0x77, 0x61, 0x67, 0x65, 0x72, 0x73, 0x12, 0x15, 0x0a, 0x03, 0x72, 0x74, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x72, 0x74, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x74, 0x70, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x76, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x63, 0x0a, 0x09, 0x57,
	0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x67, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b,
	0x77, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x77, 0x61, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x57, 0x61, 0x67, 0x65, 0x72,
	0x22, 0x45, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x4f, 0x75,
	0x74, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x22, 0x58, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x49, 0x6e, 0x12, 0x48, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69,
	0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x10, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x3a,
	0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x46, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x49, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x22, 0x55, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x12, 0x56, 0x0a,
	0x14, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x13, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x73, 0x22, 0x34, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x2e, 0x0a, 0x13, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x4f,
	0x75, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x63, 0x0a, 0x18, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x32, 0xc9, 0x06, 0x0a, 0x0a, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x12,
	0x40, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x17, 0x2e, 0x62,
	0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x1a, 0x18, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x1a, 0x17, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0c, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x75, 0x6c, 0x6c,
	0x12, 0x16, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x1a, 0x1b, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f,
	0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75,
	0x74, 0x46, 0x75, 0x6c, 0x6c, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x1a, 0x1a, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x3b, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x12, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x6a, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x49, 0x6e, 0x1a,
	0x25, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66,
	0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x79, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x10, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x22,
	0x00, 0x12, 0x3f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x79, 0x41, 0x70, 0x69, 0x12, 0x17, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x1a, 0x10,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x1a, 0x19, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x42, 0x79, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x49, 0x6e, 0x1a, 0x1c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4f, 0x75, 0x74,
	0x22, 0x00, 0x12, 0x58, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x1a, 0x1f, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c,
	0x2e, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_backoffice_main_proto_rawDescOnce sync.Once
	file_pkg_backoffice_main_proto_rawDescData = file_pkg_backoffice_main_proto_rawDesc
)

func file_pkg_backoffice_main_proto_rawDescGZIP() []byte {
	file_pkg_backoffice_main_proto_rawDescOnce.Do(func() {
		file_pkg_backoffice_main_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_backoffice_main_proto_rawDescData)
	})
	return file_pkg_backoffice_main_proto_rawDescData
}

var file_pkg_backoffice_main_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_pkg_backoffice_main_proto_goTypes = []any{
	(*Status)(nil),                    // 0: backoffice.Status
	(*HasAccessIn)(nil),               // 1: backoffice.HasAccessIn
	(*GameListIn)(nil),                // 2: backoffice.GameListIn
	(*GameDataByIntegratorName)(nil),  // 3: backoffice.GameDataByIntegratorName
	(*GetProviderIn)(nil),             // 4: backoffice.GetProviderIn
	(*GetProviderOut)(nil),            // 5: backoffice.GetProviderOut
	(*HasAccessOut)(nil),              // 6: backoffice.HasAccessOut
	(*GameListOut)(nil),               // 7: backoffice.GameListOut
	(*GameListOutFull)(nil),           // 8: backoffice.GameListOutFull
	(*Game)(nil),                      // 9: backoffice.Game
	(*IntegratorGameSettingsOut)(nil), // 10: backoffice.IntegratorGameSettingsOut
	(*WagerSets)(nil),                 // 11: backoffice.WagerSets
	(*CurrenciesOut)(nil),             // 12: backoffice.CurrenciesOut
	(*Currency)(nil),                  // 13: backoffice.Currency
	(*CurrenciesIn)(nil),              // 14: backoffice.CurrenciesIn
	(*CurrenciesFilter)(nil),          // 15: backoffice.CurrenciesFilter
	(*GetMultiplierIn)(nil),           // 16: backoffice.GetMultiplierIn
	(*ProviderMultiplierEntry)(nil),   // 17: backoffice.ProviderMultiplierEntry
	(*GetMultiplierOut)(nil),          // 18: backoffice.GetMultiplierOut
	(*IntegratorApiKeyIn)(nil),        // 19: backoffice.IntegratorApiKeyIn
	(*IntegratorApiKeyOut)(nil),       // 20: backoffice.IntegratorApiKeyOut
	(*IntegratorGameSettingsIn)(nil),  // 21: backoffice.IntegratorGameSettingsIn
}
var file_pkg_backoffice_main_proto_depIdxs = []int32{
	9,  // 0: backoffice.GameListOutFull.games:type_name -> backoffice.Game
	11, // 1: backoffice.Game.available_wager_sets:type_name -> backoffice.WagerSets
	11, // 2: backoffice.Game.wager_set:type_name -> backoffice.WagerSets
	13, // 3: backoffice.CurrenciesOut.currencies:type_name -> backoffice.Currency
	15, // 4: backoffice.CurrenciesIn.CurrenciesFilter:type_name -> backoffice.CurrenciesFilter
	17, // 5: backoffice.GetMultiplierOut.provider_multipliers:type_name -> backoffice.ProviderMultiplierEntry
	1,  // 6: backoffice.Backoffice.HasAccess:input_type -> backoffice.HasAccessIn
	2,  // 7: backoffice.Backoffice.GameList:input_type -> backoffice.GameListIn
	2,  // 8: backoffice.Backoffice.GameListFull:input_type -> backoffice.GameListIn
	4,  // 9: backoffice.Backoffice.GetProvider:input_type -> backoffice.GetProviderIn
	0,  // 10: backoffice.Backoffice.HealthCheck:input_type -> backoffice.Status
	21, // 11: backoffice.Backoffice.GetIntegratorGameSettings:input_type -> backoffice.IntegratorGameSettingsIn
	3,  // 12: backoffice.Backoffice.GetGameData:input_type -> backoffice.GameDataByIntegratorName
	1,  // 13: backoffice.Backoffice.GetGameDataByApi:input_type -> backoffice.HasAccessIn
	14, // 14: backoffice.Backoffice.GetCurrencies:input_type -> backoffice.CurrenciesIn
	16, // 15: backoffice.Backoffice.GetMultiplierByCurrency:input_type -> backoffice.GetMultiplierIn
	19, // 16: backoffice.Backoffice.GetIntegratorApiKey:input_type -> backoffice.IntegratorApiKeyIn
	6,  // 17: backoffice.Backoffice.HasAccess:output_type -> backoffice.HasAccessOut
	7,  // 18: backoffice.Backoffice.GameList:output_type -> backoffice.GameListOut
	8,  // 19: backoffice.Backoffice.GameListFull:output_type -> backoffice.GameListOutFull
	5,  // 20: backoffice.Backoffice.GetProvider:output_type -> backoffice.GetProviderOut
	0,  // 21: backoffice.Backoffice.HealthCheck:output_type -> backoffice.Status
	10, // 22: backoffice.Backoffice.GetIntegratorGameSettings:output_type -> backoffice.IntegratorGameSettingsOut
	9,  // 23: backoffice.Backoffice.GetGameData:output_type -> backoffice.Game
	9,  // 24: backoffice.Backoffice.GetGameDataByApi:output_type -> backoffice.Game
	12, // 25: backoffice.Backoffice.GetCurrencies:output_type -> backoffice.CurrenciesOut
	18, // 26: backoffice.Backoffice.GetMultiplierByCurrency:output_type -> backoffice.GetMultiplierOut
	20, // 27: backoffice.Backoffice.GetIntegratorApiKey:output_type -> backoffice.IntegratorApiKeyOut
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_backoffice_main_proto_init() }
func file_pkg_backoffice_main_proto_init() {
	if File_pkg_backoffice_main_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_backoffice_main_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HasAccessIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GameListIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GameDataByIntegratorName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetProviderOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HasAccessOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GameListOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GameListOutFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*IntegratorGameSettingsOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*WagerSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*CurrenciesOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Currency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CurrenciesIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CurrenciesFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetMultiplierIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ProviderMultiplierEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetMultiplierOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*IntegratorApiKeyIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*IntegratorApiKeyOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_backoffice_main_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*IntegratorGameSettingsIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_backoffice_main_proto_msgTypes[9].OneofWrappers = []any{}
	file_pkg_backoffice_main_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_backoffice_main_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_backoffice_main_proto_goTypes,
		DependencyIndexes: file_pkg_backoffice_main_proto_depIdxs,
		MessageInfos:      file_pkg_backoffice_main_proto_msgTypes,
	}.Build()
	File_pkg_backoffice_main_proto = out.File
	file_pkg_backoffice_main_proto_rawDesc = nil
	file_pkg_backoffice_main_proto_goTypes = nil
	file_pkg_backoffice_main_proto_depIdxs = nil
}
